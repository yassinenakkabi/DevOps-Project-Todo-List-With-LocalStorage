pipeline {
  agent any
  tools {
    jdk 'jdk_17'
nodejs 'node23'
}
environment {
SCANNER_HOME=tool 'sonar-scanner'
}
stages {
stage ("clean workspace") {
steps {
cleanWs()
}
}
stage ("Git Checkout") {
steps {
git branch: 'main', url: 'https://github.com/yassinenakkabi/DevOps-Project-Todo-List-With-LocalStorage.git'
}
}
stage("Sonarqube Analysis"){
steps{
withSonarQubeEnv('sonar-server') {
sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=todolist \
-Dsonar.projectKey=todolist '''
}
}
}
stage("Code Quality Gate"){
steps {
script {
waitForQualityGate abortPipeline: false, credentialsId: 'Sonar-server'
}
}
}
stage("Install NPM Dependencies") {
steps {
sh "npm install"
}
}
stage('OWASP FS SCAN') {
steps {
dependencyCheck additionalArguments: '--scan ./ --disableYarnAudit --disableNodeAudit -n', odcInstallation: 'DB-Check'
dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
}
}
stage ("Trivy File Scan") {
steps {
sh "trivy fs . > trivy.txt"
}
}
stage ("Build Docker Image") {
steps {
sh "docker build -t todolist ."
}
}
stage ("Tag & Push to DockerHub") {
steps {
script {
withDockerRegistry(credentialsId: 'docker') {
sh "docker tag todolist yassinenakkabi/todolist:lt "
sh "docker push yassinenakkabi/todolist:lt "
}
}
}
}
stage('Docker Scout Image') {
steps {
script{
withDockerRegistry(credentialsId: 'docker', toolName: 'docker'){
sh 'docker-scout quickview yassinenakkabi/todolist:lt'
sh 'docker-scout cves yassinenakkabi/todolist:lt'
sh 'docker-scout recommendations yassinenakkabi/todolist:lt'
}
}
}
}
stage ("Deploy to Container") {
steps {
sh 'docker run -d --name todolist -p 3000:3000 yassinenakkabi/todolist:lt'
}
}
}
post {
always {
emailext attachLog: true,
subject: "'${currentBuild.result}'",
body: """
<html>
<body>
<div style="background-color: #FFA07A; padding: 10px; margin-bottom: 10px;">
<p style="color: white; font-weight: bold;">Project: ${env.JOB_NAME}</p>
</div>
<div style="background-color: #90EE90; padding: 10px; margin-bottom: 10px;">
<p style="color: white; font-weight: bold;">Build Number: ${env.BUILD_NUMBER}</p>
</div>
<div style="background-color: #87CEEB; padding: 10px; margin-bottom: 10px;">
<p style="color: white; font-weight: bold;">URL: ${env.BUILD_URL}</p>
</div>
</body>
</html>
""",
to: 'youremail@gmail.com',
mimeType: 'text/html',
attachmentsPattern: 'trivy.txt'
}
}
}